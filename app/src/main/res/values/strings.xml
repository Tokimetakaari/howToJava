<resources>
    //Theory
    <string name="app_name">howToJava()</string>
    <string name="theorie_button1">1. Primitive Datentypen</string>
    <string name="theorie_button2">2. Klassen und Objekte</string>
    <string name="theorie_button3">3. Bedingungen und logische Ausdrücke</string>
    <string name="theorie_button4">4. Arrays und Arraylists</string>
    <string name="theorie_button5">5. Schleifen</string>
    <string name="theorie_button6">6. Konstruktoren</string>
    <string name="theorie_button7">7. Methoden</string>
    <string name="theorie_button8">8. Vererbung</string>
    <string name="theorie_button9">9. Interfaces und Events</string>
    <string name="theorie_button10">10. Dateien in Java</string>

    //Main
    <string name="main_menu_theorie_button">Theorie</string>
    <string name="main_menu_play_button">Play</string>
    <string name="main_menu_setting_button">Einstellungen</string>
    <string name="submit_button">Weiter</string>

    //Submenus Theory
    <string name="datatypes_menu_button1">1.1 Einfache Datentypen</string>
    <string name="datatypes_menu_button2">1.2 Zusammengesetzte Datentypen</string>
    <string name="datatypes_menu_button3">1.3 Variablen</string>
    <string name="datatypes_menu_button4">1.4 Zusammenfassung</string>
    <string name="classes_objects_menu_button1">2.1 Klassen und Objekte</string>
    <string name="classes_objects_menu_button2">2.2 Sichtbarkeiten</string>
    <string name="logische_ausdruecke_menu_1">3.1 Definition</string>
    <string name="logische_ausdruecke_menu_2">3.2 Arithmetische Operatoren</string>
    <string name="logische_ausdruecke_menu_3">3.3 Inkremmentierung/Dekremmentierung</string>
    <string name="logische_ausdruecke_menu_4">3.4 Operatoren</string>
    <string name="logische_ausdruecke_menu_5">3.5 If-else Statements</string>
    <string name="logische_ausdruecke_menu_6">3.6 Switch-case</string>
    <string name="array_menu_button1">4.1 Arrays - Definition und Deklaration</string>
    <string name="array_menu_button2">4.2 Arrays - Length und Iteration</string>
    <string name="array_menu_button3">4.3 Multidimensionale Arrays</string>
    <string name="array_menu_button4">4.4 ArrayLists - Definition und Deklaration</string>
    <string name="array_menu_button5">4.5 ArrayLists - Methoden</string>
    <string name="loops_menu_button2">5.2 Bedingte Schleifen</string>
    <string name="loops_menu_button1">5.1 Schleifen</string>
    <string name="methods_menu_button1">7.1 Methoden erstellen</string>
    <string name="methods_menu_button2">7.2 Methoden aufrufen</string>
    <string name="methods_menu_button3">7.3 Werte an Methoden Übergeben</string>
    <string name="interfaces_events_menu_button1">9.1 Interfaces</string>
    <string name="interfaces_events_menu_button2">9.2 UI Events</string>
    <string name="data_in_java_button1">10.1 Relativer/Absoluter Dateipfad</string>
    <string name="data_in_java_button2">10.2 try-catch-Phrase</string>
    <string name="data_in_java_button3">10.3 Buffered Reader und InputStream</string>


    //Burger
    <string name="credits_text">Thanks for playing!</string>
    <string name="credits"><![CDATA[NJK<3]]></string>


    <string-array name="spinnerNums">
        <item>1</item>
        <item>2</item>
        <item>3</item>
        <item>4</item>
        <item>5</item>
        <item>6</item>
    </string-array>

    //Notfication
    <string name="open">"Open</string>
    <string name="close">"Close</string>
    <string name="moveToTheory">Aktuelle Theorie</string>
    <string name="notify">Channeltest</string>
    <string name="channel_description">test123</string>
    <string name="this_color">Alternative Theme</string>
    <string name="save_button">SAVE</string>
    <string name="notifyMessage">Zur nächsten Übung hier klicken!</string>
    <string name="notifyTitle1">Congratulation, du hast Übung 1 bestanden</string>
    <string name="notifyTitle2">Congratulation, du hast Übung 2 bestanden</string>
    <string name="notifyTitle3">Congratulation, du hast Übung 3 bestanden</string>
    <string name="notifyTitle4">Congratulation, du hast Übung 4 bestanden</string>
    <string name="notifyTitle5">Congratulation, du hast Übung 5 bestanden</string>
    <string name="notifyTitle6">Congratulation, du hast Übung 6 bestanden</string>
    <string name="notifyTitle7">Congratulation, du hast Übung 7 bestanden</string>
    <string name="notifyTitle8">Congratulation, du hast Übung 8 bestanden</string>
    <string name="notifyTitle9">Congratulation, du hast Übung 9 bestanden</string>
    <string name="notifyTitle10">Congratulation, du hast Übung 10 bestanden</string>
    <string name="notifyTitle11">Congratulation, du hast Übung 11 bestanden</string>
    <string name="notifyTitle12">Congratulation, du hast Übung 12 bestanden</string>
    <string name="notifyTitle13">Congratulation, du hast Übung 13 bestanden</string>
    <string name="notifyTitle14">Congratulation, du hast Übung 14 bestanden</string>
    <string name="notifyTitle15">Congratulation, du hast Übung 15 bestanden</string>
    <string name="notifyTitle16">Congratulation, du hast Übung 16 bestanden</string>
    <string name="notifyTitle17">Congratulation, du hast Übung 17 bestanden</string>
    <string name="notifyTitle18">Congratulation, du hast Übung 18 bestanden</string>

    //Playmenu
    <string name="play_menu_button1">Datentypen auswählen</string>
    <string name="play_menu_button2">Datentypen 2</string>
    <string name="play_menu_button3">Klassen und Objekte</string>
    <string name="play_menu_button4">Klassen und Objekte 2</string>
    <string name="play_menu_button5">Operatoren</string>
    <string name="play_menu_button6">Bedingte Abfragen</string>
    <string name="play_menu_button7">Arrays</string>
    <string name="play_menu_button8">Schleifen</string>
    <string name="play_menu_button9">Konstruktoren</string>
    <string name="play_menu_button10">Methoden</string>
    <string name="play_menu_button11">Methoden 2</string>
    <string name="play_menu_button12">Vererbung</string>
    <string name="play_menu_button13">Interfaces</string>
    <string name="play_menu_button14">Events</string>
    <string name="play_menu_button15">Try-Catch-Phrase</string>
    <string name="play_menu_button16">Exceptions</string>
    <string name="play_menu_button17">Buffered Reader</string>

    //EndScreen
    <string name="endScreenExercise">Sie haben %d von %d richtig beantwortet</string>
    <string name="endScreenSubmit">Zurück zum Menü</string>

    //SelectDatatypes 1
    <string name="exerciseSelectDatatypesQ1">Welchen Datentyp würden Sie verwenden um den Wert 5 zu speichern?</string>
    <string name="exerciseSelectDatatypesQ2">Welchen Datentyp würden Sie verwenden um den Wert true zu speichern?</string>
    <string name="exerciseSelectDatatypesQ3">Welchen Datentyp würden Sie verwenden um den Wert 1,3 zu speichern?</string>
    <string name="exerciseSelectDatatypesQ4">Welchen Datentyp würden Sie verwenden um den Buchstaben c zu speichern?</string>
    <string name="exerciseSelectDatatypesQ5">Welchen Datentyp würden Sie verwenden um das Wort Java zu speichern?</string>
    <string name="exerciseSelectDatatypesQ1A1">int</string>
    <string name="exerciseSelectDatatypesQ1A2">float</string>
    <string name="exerciseSelectDatatypesQ1A3">String</string>
    <string name="exerciseSelectDatatypesQ1A4">boolean</string>
    <string name="exerciseSelectDatatypesQ2A1">int</string>
    <string name="exerciseSelectDatatypesQ2A2">String</string>
    <string name="exerciseSelectDatatypesQ2A3">boolean</string>
    <string name="exerciseSelectDatatypesQ2A4">byte</string>
    <string name="exerciseSelectDatatypesQ3A1">double</string>
    <string name="exerciseSelectDatatypesQ3A2">int</string>
    <string name="exerciseSelectDatatypesQ3A3">byte</string>
    <string name="exerciseSelectDatatypesQ3A4">long</string>
    <string name="exerciseSelectDatatypesQ4A1">char</string>
    <string name="exerciseSelectDatatypesQ4A2">String</string>
    <string name="exerciseSelectDatatypesQ4A3">int</string>
    <string name="exerciseSelectDatatypesQ4A4">boolean</string>
    <string name="exerciseSelectDatatypesQ5A1">char</string>
    <string name="exerciseSelectDatatypesQ5A2">String</string>
    <string name="exerciseSelectDatatypesQ5A3">double</string>
    <string name="exerciseSelectDatatypesQ5A4">float</string>

    //SelectDatatypes 2
    <string name="exerciseSelectDatatypes2Q1">Erstelle einen Integer mit dem Namen \'age\' und dem Wert 4.</string>
    <string name="exerciseSelectDatatypes2Q2">Erstellen Sie einen Boolean mit dem Namen \'lazy\' und den Wert \'true\':</string>
    <string name="exerciseSelectDatatypes2Q3">Legen Sie einen String fest mit den Namen \'name\' fest:</string>
    <string name="exerciseSelectDatatypes2A1">int age = 4;</string>
    <string name="exerciseSelectDatatypes2A1A1">int age= 4;</string>
    <string name="exerciseSelectDatatypes2A1A2">int age=4;</string>
    <string name="exerciseSelectDatatypes2A1A3">int age =4;</string>
    <string name="exerciseSelectDatatypes2A2">boolean lazy = true;</string>
    <string name="exerciseSelectDatatypes2A2A1">boolean lazy= true;</string>
    <string name="exerciseSelectDatatypes2A2A2">boolean lazy =true;</string>
    <string name="exerciseSelectDatatypes2A2A3">boolean lazy=true;</string>
    <string name="exerciseSelectDatatypes2A3">String name;</string>


    //Classes and Objects 1
    <string name="exerciseClassesAndObjectsQ1">Klassen dienen als ________ für Objekte/ Instanzen.</string>
    <string name="exerciseClassesAndObjectsQ2">Klassen beschreiben die ________ von Objekten, bzw. Instanzen, wie der Hund zum Beispiel Stöckchen holt und bellt.</string>
    <string name="exerciseClassesAndObjectsQ3">Schreiben Sie den Code, um die Klasse Hund zu erzeugen ein Objekt/ eine Instanz dieser Klasse mit Namen Umberto zu erstellen</string>
    <string name="exerciseClassesAndObjectsQ4">Schreiben Sie den Code, um ein Objekt/ eine Instanz der zuvor erstellten Klasse \'Dog\' mit Namen \'Umberto\' zu erstellen</string>
    <string name="exerciseClassesAndObjectsA1">Muster</string>
    <string name="exerciseClassesAndObjectsA1A1">muster</string>
    <string name="exerciseClassesAndObjectsA1A2">Vorlagen</string>
    <string name="exerciseClassesAndObjectsA1A3">vorlagen</string>
    <string name="exerciseClassesAndObjectsA1A4">Konzepte</string>
    <string name="exerciseClassesAndObjectsA1A5">konzepte</string>
    <string name="exerciseClassesAndObjectsA2">Eigenschaften</string>
    <string name="exerciseClassesAndObjectsA2A1">eigenschaften</string>
    <string name="exerciseClassesAndObjectsA3">public class Dog{}</string>
    <string name="exerciseClassesAndObjectsA3A1">public class Dog {}</string>
    <string name="exerciseClassesAndObjectsA4">Dog umberto = new Dog();</string>
    <string name="exerciseClassesAndObjectsA4A1">Dog umberto=new Dog()</string>
    <string name="exerciseClassesAndObjectsA4A2">Dog umberto =new Dog()</string>
    <string name="exerciseClassesAndObjectsA4A3">Dog umberto= new Dog()</string>
    <string name="exerciseClassesAndObjectsA4A4">Dog umberto = new Dog ()</string>
    <string name="exerciseClassesAndObjectsA4A5">Dog umberto=new Dog ()</string>
    <string name="exerciseClassesAndObjectsA4A6">Dog umberto =new Dog ()</string>
    <string name="exerciseClassesAndObjectsA4A7">Dog umberto= new Dog ()</string>


    //Classes and Objects 2
    <string name="exerciseClassesAndObjects2Q1">Welches Sichtbarkeitsattribut besagt, dass ein Objekt oder eine Variable nur innerhalb der aktuellen Klasse sichtbar ist?</string>
    <string name="R.string.exerciseClassesAndObjects2Q2">Welches Sichtbarkeitsattribut besagt, dass ein Objekt oder eine Variable im gesamten Programm sichtbar ist?</string>
    <string name="R.string.exerciseClassesAndObjects2Q3">Objekte oder Variablen, welche nach dem Erstellen nicht mehr verändert werden können, sind:</string>
    <string name="exerciseClassesAndObjects2Q1A1">private</string>
    <string name="exerciseClassesAndObjects2Q1A2">protected</string>
    <string name="exerciseClassesAndObjects2Q1A3">public</string>
    <string name="R_string_exerciseClassesAndObjects2Q2A1">protected</string>
    <string name="R_string_exerciseClassesAndObjects2Q2A2">public</string>
    <string name="R_string_exerciseClassesAndObjects2Q2A3">private</string>
    <string name="R_string_exerciseClassesAndObjects2Q3A1">final</string>
    <string name="R_string_exerciseClassesAndObjects2Q3A2">static</string>
    <string name="R_string_exerciseClassesAndObjects2Q3A3">protected</string>

    //Operatores
    <string name="exerciseOperatorsQ1">Der Anfangswert von x beträgt 7. Sie inkrementieren drei Mal. Welchen Wert hat x jetzt?</string>
    <string name="exerciseOperatorsQ2">Der Anfangswert von x beträgt 24. Sie dekrementieren fünfmal. Welchen Wert hat x jetzt?</string>
    <string name="exerciseOperatorsQ3">Lösen sie folgende Gleichung: 20 % 7 = ?</string>
    <string name="exerciseOperatorsQ4">Lösen sie folgende Gleichung: 18 % 6 = ?</string>
    <string name="exerciseOperatorsQ5">Es sind folgende Werte gegeben: x = 5 und y = 7. Sie inkrementieren x zweimal und zeitgleich dekrementieren Sie dreimal y. Lösen sie folgenden Term: x - y = ?</string>
    <string name="exerciseOperatorsQ6">Es sind folgende Werte gegeben: x = 28 und y = 14. Sie dekrementieren x sechsmal und zeitgleich dekrementieren Sie zweimal y. Lösen sie folgenden Term: x % y = ?</string>
    <string name="exerciseOperatorsQ7">Welche Gleichung ergibt 5 ? (Mehrfachantworten möglich)</string>
    <string name="exerciseOperatorsQ1A1">4</string>
    <string name="exerciseOperatorsQ1A2">10</string>
    <string name="exerciseOperatorsQ1A3">8</string>
    <string name="exerciseOperatorsQ1A4">5</string>
    <string name="exerciseOperatorsQ2A1">10</string>
    <string name="exerciseOperatorsQ2A2">29</string>
    <string name="exerciseOperatorsQ2A3">20</string>
    <string name="exerciseOperatorsQ2A4">19</string>
    <string name="exerciseOperatorsQ3A1">6</string>
    <string name="exerciseOperatorsQ3A2">3</string>
    <string name="exerciseOperatorsQ3A3">2</string>
    <string name="exerciseOperatorsQ3A4">7</string>
    <string name="exerciseOperatorsQ4A1">3</string>
    <string name="exerciseOperatorsQ4A2">6</string>
    <string name="exerciseOperatorsQ4A3">18</string>
    <string name="exerciseOperatorsQ4A4">0</string>
    <string name="exerciseOperatorsQ5A1">11</string>
    <string name="exerciseOperatorsQ5A2">3</string>
    <string name="exerciseOperatorsQ5A3">-7</string>
    <string name="exerciseOperatorsQ5A4">-3</string>
    <string name="exerciseOperatorsQ6A1">11</string>
    <string name="exerciseOperatorsQ6A2">14</string>
    <string name="exerciseOperatorsQ6A3">18</string>
    <string name="exerciseOperatorsQ6A4">10</string>
    <string name="exerciseOperatorsQ7A1">50 % 15 = ?</string>
    <string name="exerciseOperatorsQ7A2">18 % 5 = ?</string>
    <string name="exerciseOperatorsQ7A3">13 % 10 = ?</string>
    <string name="exerciseOperatorsQ7A4">70 % 65 = ?</string>

    //If else
    <string name="exerciseIfElseQ1">Was gibt es nicht ?</string>
    <string name="exerciseIfElseQ2">Welches ist das richtige Grundgerüst?</string>
    <string name="exerciseIfElseQ1A1">if() {}</string>
    <string name="exerciseIfElseQ1A2">else() {}</string>
    <string name="exerciseIfElseQ1A3">if else() {}</string>
    <string name="exerciseIfElseQ1A4">else if () {}</string>
    <string name="exerciseIfElseQ2A1">swtich {}</string>
    <string name="exerciseIfElseQ2A2">switch(){}</string>
    <string name="exerciseIfElseQ2A3">switch()</string>
    <string name="exerciseIfElseQ2A4">switch</string>


    //Array
    <string name="exerciseArrayQ1">Kreuzen Sie die richtig initialisierten Arrays an.</string>
    <string name="exerciseArrayQ2">Arrays verwendet man um:</string>
    <string name="exerciseArrayQ3">Wie lässt sich auf die Länge eines Arrays zugreifen?</string>
    <string name="exerciseArrayQ4">Wie viele Reihen, bzw. Spalten hat dieser zweidimensionale Array: int[][] multi = new int[5][10]</string>
    <string name="exerciseArrayQ5">Was ist der Vorteil einer ArrayList im Gegensatz zu dem Array?</string>
    <string name="exerciseArrayQ6">Welche ArrayLists sind korrekt initialisiert?</string>
    <string name="exerciseArrayQ7">Wo beginnen die Indizes des Arrays, als auch der ArrayList?</string>
    <string name="exerciseArrayQ8">Wie lässt man sich die Anzahl der Elemente einer ArrayList ausgeben?</string>
    <string name="exerciseArrayQ1A1">int[] gradeList = {1, 2, 3, 4, 5, 6}</string>
    <string name="exerciseArrayQ1A2">String names = new names[]</string>
    <string name="exerciseArrayQ1A3"><![CDATA[Array<numbers> String = new array<numbers>]]></string>
    <string name="exerciseArrayQ1A4">double[] list = new double[10]</string>
    <string name="exerciseArrayQ2A1">eine Ansammlung von Werte des gleichen Datentypes zu speichern</string>
    <string name="exerciseArrayQ2A2">verschiedene Klassenvariablen zusammenzufassen, der Datentyp kann unbeachtet bleiben</string>
    <string name="exerciseArrayQ3A1">arrayName.length</string>
    <string name="exerciseArrayQ3A2">arrayName.length()</string>
    <string name="exerciseArrayQ3A3">arrayName.size</string>
    <string name="exerciseArrayQ3A4">arrayName.size()</string>
    <string name="exerciseArrayQ4A1">Der Array hat 5 Reihen und 10 Spalten.</string>
    <string name="exerciseArrayQ4A2">Der Array hat 5 Spalten und 10 Reihen.</string>
    <string name="exerciseArrayQ5A1">Die ArrayList kann auch unterschiedliche Datentypen in einer List speichern.</string>
    <string name="exerciseArrayQ5A2">Die Größe/ Länge der ArrayList ist veränderbar.</string>
    <string name="exerciseArrayQ5A3">Man kann Elemente auch nach der Indizialisierung hinzufügen oder entfernen.</string>
    <string name="exerciseArrayQ6A1"><![CDATA[ArrayList<int> myList = new ArrayList<int>(50)]]></string>
    <string name="exerciseArrayQ6A2"><![CDATA[ArrayList<String> groceries = new ArrayList<String>(200)]]></string>
    <string name="exerciseArrayQ6A3">ArrayLists myArrayList = new ArrayList()</string>
    <string name="exerciseArrayQ6A4"><![CDATA[ArrayLists<Double> myDoubleList = new ArrayList()]]></string>
    <string name="exerciseArrayQ7A1">bei 0</string>
    <string name="exerciseArrayQ7A2">bei 1</string>
    <string name="exerciseArrayQ8A1">myArrayList.length</string>
    <string name="exerciseArrayQ8A2">myArrayList.length()</string>
    <string name="exerciseArrayQ8A3">myArrayList.size</string>
    <string name="exerciseArrayQ8A4">myArrayList.size()</string>

    //Programming exercise

    <string name="programming_exercises_answer_not_correct">Ihre Lösung ist fehlerhaft. Bitte überprüfen Sie sie noch einmal</string>
    <string name="programming_exercises_answer_correct">Ihre Lösung stimmt</string>
    <string name="programming_methods_exercise1">Scheiben Sie eine öffentliche Methode namens \'addieren\', die zwei Zahlen \'a\' und \'b\' übergeben bekommt und addiert und in einer neuen lokalen Variable namens \'c\' speichert. \'c\' soll anschließend ausgegeben werden.</string>
    <string name="programming_methods_exercise2">Verändern sie die Methode nun so, dass die beiden Zahlen \'a\' und \'b\' mit einer while-Schleife solange verglichen werden bis \'a == b\' gilt. Solange \'a\' kleiner \'b\' soll \'a\' um 1 erhöht werden. Anschließend soll \'a\' zurückgegeben werden</string>

    // Buffered Reader exercise
    <string name="exerciseBufferedReaderQ1">Zum Hochladen und Einlesen einer Textdatei benötigt man:</string>
    <string name="exerciseBufferedReaderQ2">Nachdem dem InputStream die einzulesende Textdatei zugewiesen wurde, wird so lange eingelesen, bis kein Text mehr vorhanden ist. Hierbei hilft:</string>
    <string name="exerciseBufferedReaderQ1A1">ArrayList</string>
    <string name="exerciseBufferedReaderQ1A2">BufferedReader</string>
    <string name="exerciseBufferedReaderQ1A3">Observer</string>
    <string name="exerciseBufferedReaderQ1A4">InputStream</string>
    <string name="exerciseBufferedReaderQ2A1">switch-case</string>
    <string name="exerciseBufferedReaderQ2A2">for-Schleife</string>
    <string name="exerciseBufferedReaderQ2A3">while-Schleife</string>
    <string name="exerciseBufferedReaderQ2A4">if-Bedingung</string>

   // Try-Catch-Phrase exercise

    <string name="exerciseTryCatchQ1">Um den Absturz eines Programmes zu verhindern verwendet und Fehler anzufangen, verwendet man einen ________ .</string>
    <string name="exerciseTryCatchQ2">Wird keine Exeption geworfen wird der Code im ________-Phrase ausgeführt</string>
    <string name="exerciseTryCatchQ3">Wenn ein Fehler, (welcher in der Bedingung definiert ist), gefunden wurde, wird der Code im _______-Phrase ausgeführt.</string>
    <string name="exerciseTryCatchA1">Try-Catch-Phrase</string>
    <string name="exerciseTryCatchA1A1">try-catch-phrase</string>
    <string name="exerciseTryCatchA1A2">Try Catch Phrase</string>
    <string name="exerciseTryCatchA1A3">try catch phrase</string>
    <string name="exerciseTryCatchA1A4">Try catch phrase</string>
    <string name="exerciseTryCatchA2">try</string>
    <string name="exerciseTryCatchA2A1">Try</string>
    <string name="exerciseTryCatchA3">Catch</string>
    <string name="exerciseTryCatchA3A1">catch</string>


   // Events exercise

    <string name="exerciseEventsQ1">Wenn der Nutzer innerhalb des geöffneten Anwendungsfenster einen \'Key\' drückt, ist dies ein ________ .</string>
    <string name="exerciseEventsQ2">Die Objekte, welche auf die Events lauschen heißen Listener oder ________ .</string>
    <string name="exerciseEventsQ3">Das Observer-Pattern besagt, dass ein Key/ Mouse eine Nachricht an alle ________ sendet.</string>
    <string name="exerciseEventsQ4">Die Listenerklasse braucht passende Methoden, um die Events empfangen und darauf reagieren zu können, deshalb sollte man immer das _______ implementieren</string>
    <string name="exerciseEventsA1">Keyevent</string>
    <string name="exerciseEventsA1A1">keyevent</string>
    <string name="exerciseEventsA1A2">key event</string>
    <string name="exerciseEventsA1A3">Key event</string>
    <string name="exerciseEventsA1A4">Key Event</string>
    <string name="exerciseEventsA2">Observer</string>
    <string name="exerciseEventsA2A2">observer</string>
    <string name="exerciseEventsA3">Observer</string>
    <string name="exerciseEventsA3A1">observer</string>
    <string name="exerciseEventsA3A2">Listener</string>
    <string name="exerciseEventsA3A3">listener</string>
    <string name="exerciseEventsA4">Interface</string>
    <string name="exerciseEventsA4A1">interface</string>

    // Interfaces exercise

    <string name="exerciseInterfacesQ1">Welche der folgenden Punkte treffen auf Interfaces zu?</string>
    <string name="exerciseInterfacesQ2">Implementiert eine Klasse ein Interface schreibt man: public class MyClass implements MyInterface {}</string>
    <string name="exerciseInterfacesQ1A1">Ein Interfaces ist, ähnlich wie eine Klasse, ein Referenztyp.</string>
    <string name="exerciseInterfacesQ1A2">Interfaces werden durch das Schlüsselwort \'extends\' implementiert.</string>
    <string name="exerciseInterfacesQ1A3">Man kann immer nur ein Interface implementieren.</string>
    <string name="exerciseInterfacesQ1A4">Wenn eine Klasse ein Interface implementiert hat, muss diese alle Methodensignaturen übernehmen/ überschreiben.</string>
    <string name="exerciseInterfacesQ2A1">wahr</string>
    <string name="exerciseInterfacesQ2A2">falsch</string>

    //Vererbung exercise

    <string name="exerciseVererbungQ1">Man unterscheidet zwischen der Subklasse und der ________ .</string>
    <string name="exerciseVererbungQ2">Die Subklasse erbt von der Superklasse und kann deren Methoden und Variablen verwenden. Dies wird durch das Schlüsselwort ________ ausgeführt.</string>
    <string name="exerciseVererbungQ3">Durch super.methodenname() kann man die Methoden der ________ aufrufen.</string>
    <string name="exerciseVererbungQ4">Es kann nur auf ________ oder public Methoden der Superklasse zugegriffen werden.</string>
    <string name="exerciseVererbungA1">Superklasse</string>
    <string name="exerciseVererbungA1A1">superklasse</string>
    <string name="exerciseVererbungA1A2">Elternklasse</string>
    <string name="exerciseVererbungA1A3">elternklasse</string>
    <string name="exerciseVererbungA2">extends</string>
    <string name="exerciseVererbungA3">Superklasse</string>
    <string name="exerciseVererbungA3A1">superklasse</string>
    <string name="exerciseVererbungA3A2">Elternklasse</string>
    <string name="exerciseVererbungA3A3">elternklasse</string>
    <string name="exerciseVererbungA4">protected</string>
    <string name="exerciseVererbungA4A1">Protected</string>

    //Konstruktoren
    <string name="exerciseKonstruktorenQ1">Ergänzen Sie: Konstruktoren ähneln __________</string>
    <string name="exerciseKonstruktorenQ2">Konstruktoren können keine anderen ________ aufrufen.</string>
    <string name="exerciseKonstruktorenQ4">Jeglicher Code, welcher innerhalb einer Methode oder eines Konstruktors innerhalb geschweifter Klammern steht, kann als ________ bezeichnet/ zusammengefasst werden.</string>
    <string name="exerciseKonstruktorenQ3._1">Schreiben Sie den Konstruktor für folgende Klasse, welcher zwei String-Werte \'vname\' und  als zweites \'nname\' übergeben werden:</string>
    <string name="exerciseKonstruktorenQ3_2">public class Resident {</string>
    <string name="exerciseKonstruktorenQ3_3">________ {</string>
    <string name="exerciseKonstruktorenQ3_4">vorname = vname;</string>
    <string name="exerciseKonstruktorenQ3_5">nachname = nname;</string>
    <string name="exerciseKonstruktorenQ3_6">}</string>
    <string name="exerciseKonstruktorenQ3_7">}</string>
    <string name="exerciseKonstruktorenA1">Methoden</string>
    <string name="exerciseKonstruktorenA1A1">methoden</string>
    <string name="exerciseKonstruktorenA1A2">Methods</string>
    <string name="exerciseKonstruktorenA1A3">methods</string>
    <string name="exerciseKonstruktorenA2">Konstruktoren</string>
    <string name="exerciseKonstruktorenA2A1">konstruktren</string>
    <string name="exerciseKonstruktorenA3">public Resident(vname, nname)</string>
    <string name="exerciseKonstruktorenA3A1">public Resident (vname, nname)</string>
    <string name="exerciseKonstruktorenA3A2">public Resident (vname,nname)</string>
    <string name="exerciseKonstruktorenA3A3">public Resident(vname,nname)</string>
    <string name="exerciseKonstruktorenA4">Block</string>
    <string name="exerciseKonstruktorenA4A1">block</string>
    <string name="exerciseKonstruktorenA4A2">Methodenblock</string>
    <string name="exerciseKonstruktorenA4A3">methodenblock</string>

    //Methods
    <string name="exerciseMethodsQ1">Welche Aussage trifft zu?</string>
    <string name="exerciseMethodsQ2">Was für Werte können von Methoden zurückgegeben werden?</string>
    <string name="exerciseMethodsQ3">Was sind gültige Methodennamen?</string>
    <string name="exerciseMethodsQ4">Welche Methodendeklaration ist notwendig um eine Zahl zurückgeben zu können?</string>
    <string name="exerciseMethodsQ5">Mit welchem Befehl wird die Methode \"private void doSomething()\" gestartet?</string>
    <string name="exerciseMethodsQ6">In einer Methode wird ein boolean deklariert. Man versucht diesen über eine andere Methode zu verändern. Ist das möglich? funktionieren?</string>
    <string name="exerciseMethodsQ1A1">Methoden manipulieren Daten</string>
    <string name="exerciseMethodsQ1A2">Methoden sind Objekte von Klassen</string>
    <string name="exerciseMethodsQ1A3">Methoden können keine Werte zurückgeben</string>
    <string name="exerciseMethodsQ1A4">Methoden gibt es in Java nicht</string>
    <string name="exerciseMethodsQ2A1">Methoden können keine Werte zurückgeben</string>
    <string name="exerciseMethodsQ2A2">nur einfache Datentypen wie int, boolean und Strings</string>
    <string name="exerciseMethodsQ2A3">nur Objekte einer Klasse</string>
    <string name="exerciseMethodsQ2A4">Methoden können nur den Typ zurückgeben, mit dem sie deklariert wurden</string>
    <string name="exerciseMethodsQ3A1"><![CDATA[public int ZAHLa&BADDIEREN]]></string>
    <string name="exerciseMethodsQ3A2">public int zahlenAddieren</string>
    <string name="exerciseMethodsQ3A3">public int 2ZahlenAddieren</string>
    <string name="exerciseMethodsQ3A4">public int %addieren%</string>
    <string name="exerciseMethodsQ4A1">public void zahlZurückgeben()</string>
    <string name="exerciseMethodsQ4A2">public int zahlzurückgeben()</string>
    <string name="exerciseMethodsQ4A3">public double zahlZurückgeben</string>
    <string name="exerciseMethodsQ4A4">public boolean zahlZurückgeben()</string>
    <string name="exerciseMethodsQ5A1">doSomething.start();</string>
    <string name="exerciseMethodsQ5A2">operate(doSomething);</string>
    <string name="exerciseMethodsQ5A3">doSomething();</string>
    <string name="exerciseMethodsQ5A4">private void doSomething();</string>
    <string name="exerciseMethodsQ6A1">Ja, es wird funktionieren.</string>
    <string name="exerciseMethodsQ6A2">Nein, es klappt nicht, da Methoden keine anderen Methoden aufrufen können.</string>
    <string name="exerciseMethodsQ6A3">Nein, es klappt nicht, da eine lokale Variable nur solange existiert wie die Methode ausgeführt wird.</string>
    <string name="exerciseMethodsQ6A4">Nein, es klappt nicht, weil boolean in Methoden nicht verwendet werden dürfen.</string>


</resources>
